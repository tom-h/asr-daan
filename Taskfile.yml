######################################### DRIVER TASKS ############################################

_run-all-default:
  desc: "Run through entire processing pipeline with default settings"
  cmds:
    # Default extract stage, assuming data are cleaned and filtered.
    - task clean-output-folder tmp-makedir make-kaldi-subfolders
    - task elan-to-json > {{ .OUTPUT_PATH }}/tmp/{{ .CLEANED_FILTERED_DATA }}
    - task _build-default
    # - task _train-test-default

_build-default:
  desc: "Run through only the build stage with default settings (i.e. not the clean/filter/extract stage)"
  cmds:
    - task generate-kaldi-files
           copy-generated-files copy-phones-configs copy-helper-scripts
           gather-wavs extract-wavs

    - echo "######################## Build task completed without errors"

_train-test-default:
  desc: "Run Kaldi train and test stages on default settings"
  # dir: input/output/kaldi
  cmds:
    - cd {{ .OUTPUT_PATH }}/kaldi; ./run.sh

######################################### HELPER TASKS ############################################

generate-kaldi-files:
  desc: "Generate corpus-related files for Kaldi from JSON data"
  cmds:
    - task json-to-kaldi < {{ .OUTPUT_PATH }}/tmp/{{ .CLEANED_FILTERED_DATA }}

    - task make-wordlist < {{ .OUTPUT_PATH }}/tmp/{{ .CLEANED_FILTERED_DATA }} |
      task make-prn-dict > {{ .OUTPUT_PATH }}/tmp/lexicon.txt

    - task make-nonsil-phones > {{ .OUTPUT_PATH }}/tmp/nonsilence_phones.txt

    # Grab variables from Taskvars.yml and inject into mo command
    - KALDI_ROOT={{ .KALDI_ROOT }}
      HELPERS_PATH={{ .HELPERS_PATH }}
      CORPUS_PATH={{ .CORPUS_PATH }}
        mo < templates/path.sh > {{ .OUTPUT_PATH }}/tmp/path.sh

    - MFCC_SAMPLE_FREQUENCY={{ .MFCC_SAMPLE_FREQUENCY }}
      MFCC_FRAME_LENGTH={{ .MFCC_FRAME_LENGTH }}
      MFCC_LOW_FREQ={{ .MFCC_LOW_FREQ }}
      MFCC_HIGH_FREQ={{ .MFCC_HIGH_FREQ }}
      MFCC_NUM_CEPS={{ .MFCC_NUM_CEPS }}
        mo < templates/mfcc.conf > {{ .OUTPUT_PATH }}/tmp/mfcc.conf

    - DECODE_BEAM={{ .DECODE_BEAM }}
      DECODE_FIRST_BEAM={{ .DECODE_FIRST_BEAM }}
        mo < templates/decode.config > {{ .OUTPUT_PATH }}/tmp/decode.config

##################### Helpers for copying things

copy-generated-files:
  desc: "Copy generated files to appropriate (sub)directories under /output/kaldi"
  cmds:
    - cp {{ .OUTPUT_PATH }}/tmp/json_splitted/corpus.txt {{ .OUTPUT_PATH }}/kaldi/data/local/
    - cp {{ .OUTPUT_PATH }}/tmp/lexicon.txt {{ .OUTPUT_PATH }}/kaldi/data/local/dict/
    - cp {{ .OUTPUT_PATH }}/tmp/nonsilence_phones.txt {{ .OUTPUT_PATH }}/kaldi/data/local/dict/
    
    - cp {{ .OUTPUT_PATH }}/tmp/path.sh {{ .OUTPUT_PATH }}/kaldi/
    - cp {{ .OUTPUT_PATH }}/tmp/mfcc.conf {{ .OUTPUT_PATH }}/kaldi/conf/
    - cp {{ .OUTPUT_PATH }}/tmp/decode.config {{ .OUTPUT_PATH }}/kaldi/conf/

    # Note the default settings make the 'train' and 'test' folders identical
    - cp {{ .OUTPUT_PATH }}/tmp/json_splitted/segments {{ .OUTPUT_PATH }}/tmp/json_splitted/text {{ .OUTPUT_PATH }}/tmp/json_splitted/utt2spk {{ .OUTPUT_PATH }}/tmp/json_splitted/wav.scp {{ .OUTPUT_PATH }}/kaldi/data/test/
    - cp {{ .OUTPUT_PATH }}/tmp/json_splitted/segments {{ .OUTPUT_PATH }}/tmp/json_splitted/text {{ .OUTPUT_PATH }}/tmp/json_splitted/utt2spk {{ .OUTPUT_PATH }}/tmp/json_splitted/wav.scp {{ .OUTPUT_PATH }}/kaldi/data/train/

copy-helper-scripts:
  desc: "Copy the necessary scripts from Kaldi"
  cmds:
    - cp /kaldi-helpers/templates/cmd.sh {{ .OUTPUT_PATH }}/kaldi/
    - cp /kaldi-helpers/templates/run.sh {{ .OUTPUT_PATH }}/kaldi/
    - cp /kaldi-helpers/templates/score.sh {{ .OUTPUT_PATH }}/kaldi/local/
    - cp -R {{ .KALDI_ROOT }}/egs/wsj/s5/steps {{ .OUTPUT_PATH }}/kaldi/steps
    - cp -R {{ .KALDI_ROOT }}/egs/wsj/s5/utils {{ .OUTPUT_PATH }}/kaldi/utils

copy-phones-configs:
  desc: "Copy provided silence/optional silence configuration files"
  cmds:
    - cp input/config/optional_silence.txt {{ .OUTPUT_PATH }}/kaldi/data/local/dict/
    - cp input/config/silence_phones.txt {{ .OUTPUT_PATH }}/kaldi/data/local/dict/

gather-wavs:
  desc: "Gather all wav files inside input/data into output/media.zip"
  cmds:
    # Tar up .wav files in order to keep folder structure the same
    - cd {{ .CORPUS_PATH }}; tar cf /kaldi-helpers/{{ .OUTPUT_PATH }}/media.tar `find . | grep '\.wav'`

extract-wavs:
  desc: "Extract all wav files into kaldi folder"
  cmds:
    - tar xf {{ .OUTPUT_PATH }}/media.tar -C {{ .OUTPUT_PATH }}/kaldi
    - rm {{ .OUTPUT_PATH }}/media.tar

##################### Helpers for folders stuff

clean-output-folder:
  desc: "Delete all files and folders inside /kaldi-helpers/output"
  cmds:
    - rm -rf {{ .OUTPUT_PATH }}/*

tmp-makedir:
  desc: "Make the tmp directory, if it does not exist"
  cmds:
    - if [ ! -d {{ .OUTPUT_PATH }}/tmp ]; then mkdir {{ .OUTPUT_PATH }}/tmp; fi

tmp-delete:
  deps: [tmp-makedir]
  desc: "Delete all files in tmp directory"
  cmds:
    # Make directory non-empty, just in case it's just been initialised
    - cp /dev/null {{ .OUTPUT_PATH }}/null
    - rm -r {{ .OUTPUT_PATH }}/*

make-kaldi-subfolders:
  desc: "Makes subfolder structure which Kaldi expects"
  cmds:
    - mkdir -p {{ .OUTPUT_PATH }}/kaldi/data/local/dict
    - mkdir -p {{ .OUTPUT_PATH }}/kaldi/data/test
    - mkdir -p {{ .OUTPUT_PATH }}/kaldi/data/train
    - mkdir -p {{ .OUTPUT_PATH }}/kaldi/conf
    - mkdir -p {{ .OUTPUT_PATH }}/kaldi/local

##################### Helpers for generating things (mostly wrappers for Python scripts)

cat-all-json:
  desc: "Concatenate all .json files into one .json file"
  cmds:
    - jq -s '. | add'

make-nonsil-phones:
  desc: "Generate non-silence phones file from LETTER_TO_SOUND_PATH file defined in Taskfile.yml"
  cmds:
    - grep -v '^#' < {{ .LETTER_TO_SOUND_PATH }}
      | cut -d' ' -f2
      | grep -v '^$'
      | sort -u

elan-to-json:
  desc: "Convert a folder of .eaf files to a single JSON file"
  env:
    PYTHONIOENCODING: "utf-8"
  cmds:
    - python3.6 {{ .SCRIPTS_PATH }}/audio_segmenter/elan_to_json.py {{ .CORPUS_PATH }}

json-to-kaldi:
  desc: "Generate files for the Kaldi format"
  cmds:
    - python3 {{ .SCRIPTS_PATH }}/audio_segmenter/json_to_kaldi.py --output-folder="{{ .OUTPUT_PATH }}/tmp/json_splitted"

clean-json:
  desc: "Clean corpus of problematic characters before passing data to Kaldi"
  env:
    PYTHONIOENCODING: "utf-8"
  cmds:
    - python3 {{ .SCRIPTS_PATH }}/text_processing/clean_text.py

make-wordlist:
  desc: "Make a list of unique words that occur in the corpus"
  env:
    PYTHONIOENCODING: "utf-8"
  cmds:
    - python3 {{ .SCRIPTS_PATH }}/text_processing/make_wordlist.py

make-prn-dict:
  desc: "Make pronunciation dictionary"
  env:
    PYTHONIOENCODING: "utf-8"
  cmds:
    - python3 {{ .SCRIPTS_PATH }}/pronunciation/convert.py --config {{ .LETTER_TO_SOUND_PATH }}
